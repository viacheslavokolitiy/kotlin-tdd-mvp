apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.7.201606060606"
}

project.afterEvaluate {
    def buildTypes = android.buildTypes.collect { type -> type.name }
    def productFlavors = android.productFlavors.collect { flavor -> flavor.name }
    if (!productFlavors) productFlavors.add('')

    productFlavors.each { productFlavorName ->
        buildTypes.each { buildTypeName ->
            def sourceName, sourcePath
            if (!productFlavorName) {
                sourceName = sourcePath = "${buildTypeName}"
            } else {
                sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
                sourcePath = "${productFlavorName}/${buildTypeName}"
            }

            def testTaskName = "test${sourceName.capitalize()}UnitTest"
            task "create${sourceName.capitalize()}UnitTestCoverageReport"(type: JacocoReport, dependsOn: "$testTaskName") {
                group = "Reporting"
                description =
                        "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."
                classDirectories =
                        fileTree(dir: "${project.buildDir}/intermediates/classes/${sourcePath}",
                                excludes: ['**/R.class', '**/R$*.class',
                                           '**/*$ViewInjector*.*',
                                           '**/*$ViewBinder*.*',
                                           '**/*MembersInjector*.*',
                                           '**/BuildConfig.*',
                                           '**/Manifest*.*',
                                           '**/*$Lambda$*.class',
                                           '**/*Factory*.class',
                                           '**/*$Builder*',
                                           '**/*DaggerApplicationComponent*.class',])
                sourceDirectories = files(["src/main/java",
                                           "src/$productFlavorName/java",
                                           "src/$buildTypeName/java"])

                executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

                reports {
                    xml.enabled = true
                    html.enabled = true
                    csv.enabled false
                }
            }
        }
    }
}